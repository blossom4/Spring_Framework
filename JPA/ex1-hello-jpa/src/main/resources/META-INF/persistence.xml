<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	<persistence-unit name="hello">
		<!-- Class에서 @Entity를 붙였다면, persistence.xml에서 class태그로 명시해주어야한다. -->
	<class>hellojpa.Member</class>
		<properties> 
			<!-- 필수 속성 --> 
			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/> 
			<property name="javax.persistence.jdbc.user" value="sa"/> 
			<property name="javax.persistence.jdbc.password" value=""/> 
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/> 
			<property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/> 
			
			<!-- 옵션 --> 
			<property name="hibernate.show_sql" value="true"/> 
			<property name="hibernate.format_sql" value="true"/> 
			<property name="hibernate.use_sql_comments" value="true"/> 
			<property name="hibernate.jdbc.batch_size" value="10"/>
			<!-- DB scheme 자동 생성 -->
			
			<!-- 1. create 기존 테이블 삭제 후 다시 생성 -->
	 		<!-- 2. create-drop 기존 테이블 삭제 후 다시 생성, 종료할 때 삭제한다. -->
	 		<!-- 3. update 변경된 부분만 반영한다. -->
	 		<!-- 4. validate mapping이 잘 되었는지 검사를 한다. -->
	  		<!-- 5. none 아무 속성도 사용하지 않는다. -->
			<property name="hibernate.hbm2ddl.auto" value="create"/>
		</properties>
	</persistence-unit>
</persistence>
